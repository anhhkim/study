{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createProblemList } from \"./math3API\";\nconst initialState = {\n  list: createProblemList(),\n  current: 0,\n  correct: 0\n};\nexport const math3Slice = createSlice({\n  name: \"math3\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    next: state => {\n      if (state.current + 1 < state.list.length) {\n        state.current++;\n      }\n    },\n    selectAnswer: (state, action) => {\n      if (action.payload === state.list[state.current].num3) {\n        state.correct++;\n      } else {\n        state.list.push(state.list[state.current]);\n      }\n    }\n  }\n});\nexport const {\n  next,\n  selectAnswer\n} = math3Slice.actions;\nexport const selectProblem = state => state.math3.list[state.math3.current];\nexport const selectTotal = state => state.math3.list.length;\nexport const selectCorrect = state => state.math3.correct;\nexport const selectCurrent = state => state.math3.current;\nexport default math3Slice.reducer;","map":{"version":3,"names":["createSlice","createProblemList","initialState","list","current","correct","math3Slice","name","reducers","next","state","length","selectAnswer","action","payload","num3","push","actions","selectProblem","math3","selectTotal","selectCorrect","selectCurrent","reducer"],"sources":["/Users/kim.anh/Desktop/mimi/study/src/features/math3/math3Slice.ts"],"sourcesContent":["import { createSlice, Draft, PayloadAction } from \"@reduxjs/toolkit\";\nimport { createProblemList } from \"./math3API\";\nimport { RootState } from \"../../app/store\";\nimport { CommonProblem } from \"../../app/common/math\";\n\nexport type Problem1 = CommonProblem & {\n  num1: number;\n  num2: number;\n  num3: number;\n  ops: string;\n}\n\nexport interface Math3State {\n  list: Problem1[];\n  current: number;\n  correct: number;\n}\n\nconst initialState: Math3State = {\n  list: createProblemList(),\n  current: 0,\n  correct: 0,\n};\n\nexport const math3Slice = createSlice({\n  name: \"math3\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    next: (state: Draft<Math3State>) => {\n      if (state.current+1 < state.list.length) {\n        state.current++;\n      }\n    },\n    selectAnswer: (state: Draft<Math3State>, action: PayloadAction<number>) => {\n      if (action.payload === state.list[state.current].num3) {\n        state.correct++;\n      } else {\n        state.list.push(state.list[state.current]);\n      }\n    },\n  },\n});\n\nexport const { next, selectAnswer } = math3Slice.actions;\n\nexport const selectProblem = (state: RootState) =>\n  state.math3.list[state.math3.current];\nexport const selectTotal = (state: RootState) => state.math3.list.length;\nexport const selectCorrect = (state: RootState) => state.math3.correct;\nexport const selectCurrent = (state: RootState) => state.math3.current;\n\nexport default math3Slice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAA8B,kBAAkB;AACpE,SAASC,iBAAiB,QAAQ,YAAY;AAiB9C,MAAMC,YAAwB,GAAG;EAC/BC,IAAI,EAAEF,iBAAiB,CAAC,CAAC;EACzBG,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,OAAO;EACbL,YAAY;EACZ;EACAM,QAAQ,EAAE;IACRC,IAAI,EAAGC,KAAwB,IAAK;MAClC,IAAIA,KAAK,CAACN,OAAO,GAAC,CAAC,GAAGM,KAAK,CAACP,IAAI,CAACQ,MAAM,EAAE;QACvCD,KAAK,CAACN,OAAO,EAAE;MACjB;IACF,CAAC;IACDQ,YAAY,EAAEA,CAACF,KAAwB,EAAEG,MAA6B,KAAK;MACzE,IAAIA,MAAM,CAACC,OAAO,KAAKJ,KAAK,CAACP,IAAI,CAACO,KAAK,CAACN,OAAO,CAAC,CAACW,IAAI,EAAE;QACrDL,KAAK,CAACL,OAAO,EAAE;MACjB,CAAC,MAAM;QACLK,KAAK,CAACP,IAAI,CAACa,IAAI,CAACN,KAAK,CAACP,IAAI,CAACO,KAAK,CAACN,OAAO,CAAC,CAAC;MAC5C;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,IAAI;EAAEG;AAAa,CAAC,GAAGN,UAAU,CAACW,OAAO;AAExD,OAAO,MAAMC,aAAa,GAAIR,KAAgB,IAC5CA,KAAK,CAACS,KAAK,CAAChB,IAAI,CAACO,KAAK,CAACS,KAAK,CAACf,OAAO,CAAC;AACvC,OAAO,MAAMgB,WAAW,GAAIV,KAAgB,IAAKA,KAAK,CAACS,KAAK,CAAChB,IAAI,CAACQ,MAAM;AACxE,OAAO,MAAMU,aAAa,GAAIX,KAAgB,IAAKA,KAAK,CAACS,KAAK,CAACd,OAAO;AACtE,OAAO,MAAMiB,aAAa,GAAIZ,KAAgB,IAAKA,KAAK,CAACS,KAAK,CAACf,OAAO;AAEtE,eAAeE,UAAU,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}