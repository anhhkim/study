{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  current: getProblem(),\n  total: 0,\n  correct: 0\n};\nexport const math1Slice = createSlice({\n  name: 'math1',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    next: state => {\n      state.current = getProblem();\n    },\n    selectAnswer: (state, action) => {\n      action.payload === state.current.answer && state.correct++;\n      state.total++;\n    },\n    reset: state => {\n      state = {\n        ...initialState\n      };\n    }\n  }\n});\nexport const {\n  next,\n  selectAnswer,\n  reset\n} = math1Slice.actions;\nexport const selectProblem = state => state.math1.current;\nexport const selectTotal = state => state.math1.total;\nexport const selectCorrect = state => state.math1.correct;\nexport default math1Slice.reducer;","map":{"version":3,"names":["createSlice","initialState","current","getProblem","total","correct","math1Slice","name","reducers","next","state","selectAnswer","action","payload","answer","reset","actions","selectProblem","math1","selectTotal","selectCorrect","reducer"],"sources":["/Users/kim.anh/Desktop/mimi/study/src/features/math1/math1Slice.ts"],"sourcesContent":["import { createSlice, Draft, PayloadAction } from '@reduxjs/toolkit';\nimport { getProblemList } from './math1API';\nimport { RootState } from '../../app/store';\n\nexport interface Problem {\n  num1: number;\n  num2: number;\n  ops: string;\n  choices: number[];\n  answer: number;\n}\n\nexport interface Math1State {\n  list: Problem[];\n  current: number;\n  correct: number;\n}\n\nconst initialState: Math1State = {\n  current: getProblem(),\n  total: 0,\n  correct: 0,\n};\n\nexport const math1Slice = createSlice({\n  name: 'math1',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    next: (\n      state: Draft<Math1State>,\n    ) => {\n      state.current = getProblem();\n    },\n    selectAnswer: (\n      state: Draft<Math1State>,\n      action: PayloadAction<number>,  \n    ) => {\n      action.payload === state.current.answer && state.correct++;\n      state.total++;\n    },\n    reset: (state) => {\n      state = {\n        ...initialState,\n      }\n    },\n  },\n});\n\nexport const { next, selectAnswer, reset } = math1Slice.actions;\n\nexport const selectProblem = (state: RootState) => state.math1.current;\nexport const selectTotal = (state: RootState) => state.math1.total;\nexport const selectCorrect = (state: RootState) => state.math1.correct;\n\nexport default math1Slice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAA8B,kBAAkB;AAkBpE,MAAMC,YAAwB,GAAG;EAC/BC,OAAO,EAAEC,UAAU,CAAC,CAAC;EACrBC,KAAK,EAAE,CAAC;EACRC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,OAAO;EACbN,YAAY;EACZ;EACAO,QAAQ,EAAE;IACRC,IAAI,EACFC,KAAwB,IACrB;MACHA,KAAK,CAACR,OAAO,GAAGC,UAAU,CAAC,CAAC;IAC9B,CAAC;IACDQ,YAAY,EAAEA,CACZD,KAAwB,EACxBE,MAA6B,KAC1B;MACHA,MAAM,CAACC,OAAO,KAAKH,KAAK,CAACR,OAAO,CAACY,MAAM,IAAIJ,KAAK,CAACL,OAAO,EAAE;MAC1DK,KAAK,CAACN,KAAK,EAAE;IACf,CAAC;IACDW,KAAK,EAAGL,KAAK,IAAK;MAChBA,KAAK,GAAG;QACN,GAAGT;MACL,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ,IAAI;EAAEE,YAAY;EAAEI;AAAM,CAAC,GAAGT,UAAU,CAACU,OAAO;AAE/D,OAAO,MAAMC,aAAa,GAAIP,KAAgB,IAAKA,KAAK,CAACQ,KAAK,CAAChB,OAAO;AACtE,OAAO,MAAMiB,WAAW,GAAIT,KAAgB,IAAKA,KAAK,CAACQ,KAAK,CAACd,KAAK;AAClE,OAAO,MAAMgB,aAAa,GAAIV,KAAgB,IAAKA,KAAK,CAACQ,KAAK,CAACb,OAAO;AAEtE,eAAeC,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}