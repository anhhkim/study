{"ast":null,"code":"import { randomizer } from \"../../app/common/common\";\nimport { shuffle, create1DigitAddList, create1DigitSubList, get1DigitChoices } from \"../../app/common/math1Digit\";\nexport function createProblemList() {\n  const addList = create1DigitAddList();\n  const subList = create1DigitSubList();\n  const list = [];\n  addList.forEach(p1 => {\n    list.push(...addList.filter(p2 => p2.num1 === p1.num3 && p2.num1 + p2.num2 <= 10).map(p2 => combineProblems(p1, p2)));\n    list.push(...subList.filter(p2 => p2.num1 === p1.num3 && p2.num1 - p2.num2 >= 0).map(p2 => combineProblems(p1, p2)));\n  });\n  subList.forEach(p1 => {\n    list.push(...addList.filter(p2 => p2.num1 === p1.num3 && p2.num1 + p2.num2 <= 10).map(p2 => combineProblems(p1, p2)));\n    list.push(...subList.filter(p2 => p2.num1 === p1.num3 && p2.num1 - p2.num2 >= 0).map(p2 => combineProblems(p1, p2)));\n  });\n  return shuffle(list).slice(0, 100);\n}\nfunction combineProblems(p1, p2) {\n  return {\n    num1: p1.num1,\n    num2: p1.num2,\n    num3: p2.num2,\n    num4: p2.num3,\n    ops1: p1.ops,\n    ops2: p2.ops,\n    answer: p2.num3,\n    question: 3,\n    choices: get1DigitChoices(p2.num3),\n    equalRight: randomizer(0, 1) === 1\n  };\n}","map":{"version":3,"names":["randomizer","shuffle","create1DigitAddList","create1DigitSubList","get1DigitChoices","createProblemList","addList","subList","list","forEach","p1","push","filter","p2","num1","num3","num2","map","combineProblems","slice","num4","ops1","ops","ops2","answer","question","choices","equalRight"],"sources":["/Users/kim.anh/Desktop/mimi/study/src/features/math2/math2API.ts"],"sourcesContent":["import { randomizer } from \"../../app/common/common\";\nimport { shuffle, create1DigitAddList, create1DigitSubList, get1DigitChoices } from \"../../app/common/math1Digit\";\nimport { Problem1 } from \"../math1/math1Slice\";\nimport { Problem2 } from \"./math2Slice\";\n\nexport function createProblemList() {\n  const addList = create1DigitAddList();\n  const subList = create1DigitSubList();\n\n  const list: Problem2[] = [];\n  addList.forEach((p1) => {\n    list.push(...addList.filter((p2) => p2.num1 === p1.num3 && p2.num1 + p2.num2 <= 10).map((p2) => combineProblems(p1, p2)));\n    list.push(...subList.filter((p2) => p2.num1 === p1.num3 && p2.num1 - p2.num2 >= 0).map((p2) => combineProblems(p1, p2)));\n  });\n  subList.forEach((p1) => {\n    list.push(...addList.filter((p2) => p2.num1 === p1.num3 && p2.num1 + p2.num2 <= 10).map((p2) => combineProblems(p1, p2)));\n    list.push(...subList.filter((p2) => p2.num1 === p1.num3 && p2.num1 - p2.num2 >= 0).map((p2) => combineProblems(p1, p2)));\n  });\n  return shuffle(list).slice(0, 100);\n}\n\nfunction combineProblems(p1: Problem1, p2: Problem1) {\n  return {\n    num1: p1.num1,\n    num2: p1.num2,\n    num3: p2.num2,\n    num4: p2.num3,\n    ops1: p1.ops,\n    ops2: p2.ops,\n    answer: p2.num3,\n    question: 3,\n    choices: get1DigitChoices(p2.num3),\n    equalRight: randomizer(0, 1) === 1,\n  };\n}"],"mappings":"AAAA,SAASA,UAAU,QAAQ,yBAAyB;AACpD,SAASC,OAAO,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,gBAAgB,QAAQ,6BAA6B;AAIjH,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAClC,MAAMC,OAAO,GAAGJ,mBAAmB,CAAC,CAAC;EACrC,MAAMK,OAAO,GAAGJ,mBAAmB,CAAC,CAAC;EAErC,MAAMK,IAAgB,GAAG,EAAE;EAC3BF,OAAO,CAACG,OAAO,CAAEC,EAAE,IAAK;IACtBF,IAAI,CAACG,IAAI,CAAC,GAAGL,OAAO,CAACM,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,KAAKJ,EAAE,CAACK,IAAI,IAAIF,EAAE,CAACC,IAAI,GAAGD,EAAE,CAACG,IAAI,IAAI,EAAE,CAAC,CAACC,GAAG,CAAEJ,EAAE,IAAKK,eAAe,CAACR,EAAE,EAAEG,EAAE,CAAC,CAAC,CAAC;IACzHL,IAAI,CAACG,IAAI,CAAC,GAAGJ,OAAO,CAACK,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,KAAKJ,EAAE,CAACK,IAAI,IAAIF,EAAE,CAACC,IAAI,GAAGD,EAAE,CAACG,IAAI,IAAI,CAAC,CAAC,CAACC,GAAG,CAAEJ,EAAE,IAAKK,eAAe,CAACR,EAAE,EAAEG,EAAE,CAAC,CAAC,CAAC;EAC1H,CAAC,CAAC;EACFN,OAAO,CAACE,OAAO,CAAEC,EAAE,IAAK;IACtBF,IAAI,CAACG,IAAI,CAAC,GAAGL,OAAO,CAACM,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,KAAKJ,EAAE,CAACK,IAAI,IAAIF,EAAE,CAACC,IAAI,GAAGD,EAAE,CAACG,IAAI,IAAI,EAAE,CAAC,CAACC,GAAG,CAAEJ,EAAE,IAAKK,eAAe,CAACR,EAAE,EAAEG,EAAE,CAAC,CAAC,CAAC;IACzHL,IAAI,CAACG,IAAI,CAAC,GAAGJ,OAAO,CAACK,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,KAAKJ,EAAE,CAACK,IAAI,IAAIF,EAAE,CAACC,IAAI,GAAGD,EAAE,CAACG,IAAI,IAAI,CAAC,CAAC,CAACC,GAAG,CAAEJ,EAAE,IAAKK,eAAe,CAACR,EAAE,EAAEG,EAAE,CAAC,CAAC,CAAC;EAC1H,CAAC,CAAC;EACF,OAAOZ,OAAO,CAACO,IAAI,CAAC,CAACW,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;AACpC;AAEA,SAASD,eAAeA,CAACR,EAAY,EAAEG,EAAY,EAAE;EACnD,OAAO;IACLC,IAAI,EAAEJ,EAAE,CAACI,IAAI;IACbE,IAAI,EAAEN,EAAE,CAACM,IAAI;IACbD,IAAI,EAAEF,EAAE,CAACG,IAAI;IACbI,IAAI,EAAEP,EAAE,CAACE,IAAI;IACbM,IAAI,EAAEX,EAAE,CAACY,GAAG;IACZC,IAAI,EAAEV,EAAE,CAACS,GAAG;IACZE,MAAM,EAAEX,EAAE,CAACE,IAAI;IACfU,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAEtB,gBAAgB,CAACS,EAAE,CAACE,IAAI,CAAC;IAClCY,UAAU,EAAE3B,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK;EACnC,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}