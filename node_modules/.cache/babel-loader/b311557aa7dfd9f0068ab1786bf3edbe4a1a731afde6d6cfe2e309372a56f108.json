{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getProblemList } from './math1API';\nconst initialState = {\n  list: getProblemList(),\n  current: 0,\n  correct: 0\n};\nexport const math1Slice = createSlice({\n  name: 'math1',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    next: state => {\n      state.current++;\n    },\n    selectAnswer: (state, action) => {\n      action.payload === state.list[state.current].answer && state.correct++;\n      state.total++;\n    },\n    reset: state => {\n      state = {\n        ...initialState\n      };\n    }\n  }\n});\nexport const {\n  next,\n  selectAnswer,\n  reset\n} = math1Slice.actions;\nexport const selectProblem = state => state.math1.current;\nexport const selectTotal = state => state.math1.total;\nexport const selectCorrect = state => state.math1.correct;\nexport default math1Slice.reducer;","map":{"version":3,"names":["createSlice","getProblemList","initialState","list","current","correct","math1Slice","name","reducers","next","state","selectAnswer","action","payload","answer","total","reset","actions","selectProblem","math1","selectTotal","selectCorrect","reducer"],"sources":["/Users/kim.anh/Desktop/mimi/study/src/features/math1/math1Slice.ts"],"sourcesContent":["import { createSlice, Draft, PayloadAction } from '@reduxjs/toolkit';\nimport { getProblemList } from './math1API';\nimport { RootState } from '../../app/store';\n\nexport interface Problem {\n  num1: number;\n  num2: number;\n  ops: string;\n  choices: number[];\n  answer: number;\n}\n\nexport interface Math1State {\n  list: Problem[];\n  current: number;\n  correct: number;\n}\n\nconst initialState: Math1State = {\n  list: getProblemList(),\n  current: 0,\n  correct: 0,\n};\n\nexport const math1Slice = createSlice({\n  name: 'math1',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    next: (\n      state: Draft<Math1State>,\n    ) => {\n      state.current++;\n    },\n    selectAnswer: (\n      state: Draft<Math1State>,\n      action: PayloadAction<number>,  \n    ) => {\n      action.payload === state.list[state.current].answer && state.correct++;\n      state.total++;\n    },\n    reset: (state) => {\n      state = {\n        ...initialState,\n      }\n    },\n  },\n});\n\nexport const { next, selectAnswer, reset } = math1Slice.actions;\n\nexport const selectProblem = (state: RootState) => state.math1.current;\nexport const selectTotal = (state: RootState) => state.math1.total;\nexport const selectCorrect = (state: RootState) => state.math1.correct;\n\nexport default math1Slice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAA8B,kBAAkB;AACpE,SAASC,cAAc,QAAQ,YAAY;AAiB3C,MAAMC,YAAwB,GAAG;EAC/BC,IAAI,EAAEF,cAAc,CAAC,CAAC;EACtBG,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,OAAO;EACbL,YAAY;EACZ;EACAM,QAAQ,EAAE;IACRC,IAAI,EACFC,KAAwB,IACrB;MACHA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,YAAY,EAAEA,CACZD,KAAwB,EACxBE,MAA6B,KAC1B;MACHA,MAAM,CAACC,OAAO,KAAKH,KAAK,CAACP,IAAI,CAACO,KAAK,CAACN,OAAO,CAAC,CAACU,MAAM,IAAIJ,KAAK,CAACL,OAAO,EAAE;MACtEK,KAAK,CAACK,KAAK,EAAE;IACf,CAAC;IACDC,KAAK,EAAGN,KAAK,IAAK;MAChBA,KAAK,GAAG;QACN,GAAGR;MACL,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEO,IAAI;EAAEE,YAAY;EAAEK;AAAM,CAAC,GAAGV,UAAU,CAACW,OAAO;AAE/D,OAAO,MAAMC,aAAa,GAAIR,KAAgB,IAAKA,KAAK,CAACS,KAAK,CAACf,OAAO;AACtE,OAAO,MAAMgB,WAAW,GAAIV,KAAgB,IAAKA,KAAK,CAACS,KAAK,CAACJ,KAAK;AAClE,OAAO,MAAMM,aAAa,GAAIX,KAAgB,IAAKA,KAAK,CAACS,KAAK,CAACd,OAAO;AAEtE,eAAeC,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}