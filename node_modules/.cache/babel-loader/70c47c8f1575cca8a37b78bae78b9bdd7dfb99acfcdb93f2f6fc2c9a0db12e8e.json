{"ast":null,"code":"export function createSubList() {\n  const list = [];\n  for (let i = 1; i <= 10; i++) {\n    for (let j = 1; j < i; j++) {\n      const num3 = i - j;\n      list.push({\n        num1: i,\n        num2: j,\n        num3,\n        ops: \"-\",\n        question,\n        answer,\n        choices: getChoices(answer)\n      });\n    }\n  }\n  return list;\n}\nexport function createAddList() {\n  const list = [];\n  for (let i = 1; i <= 10; i++) {\n    for (let j = 1; j <= 10 - i; j++) {\n      const num3 = i + j;\n      const question = randomizer(1, 3);\n      const answer = question === 1 ? i : question === 2 ? j : num3;\n      list.push({\n        num1: i,\n        num2: j,\n        num3,\n        ops: \"+\",\n        answer,\n        question,\n        choices: getChoices(answer)\n      });\n    }\n  }\n  return list;\n}\nexport function getChoices(answer) {\n  const min = answer > 7 ? answer - 7 : 0;\n  const max = answer > 3 ? 3 : answer;\n  const index = randomizer(min, max);\n  const choices = [];\n  for (let i = 0; i < 4; i++) {\n    choices.push(answer + i - index);\n  }\n  return shuffle(choices);\n}\nexport function randomizer(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\nexport function shuffle(array) {\n  for (let i = 0; i < array.length; i++) {\n    const j = randomizer(0, array.length - 1);\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nexport function getCommonProblem(arr) {\n  const question = randomizer(0, arr.length - 1);\n  const answer = question === 1 ? i : question === 2 ? j : num3;\n}","map":{"version":3,"names":["createSubList","list","i","j","num3","push","num1","num2","ops","question","answer","choices","getChoices","createAddList","randomizer","min","max","index","shuffle","Math","floor","random","array","length","getCommonProblem","arr"],"sources":["/Users/kim.anh/Desktop/mimi/study/src/app/common/math.ts"],"sourcesContent":["export type CommonProblem = {\n    answer: number;\n    choices: number[];\n    question: number;\n    equalRight: boolean;\n}\n\nexport function createSubList() {\n    const list = [];\n  \n    for (let i = 1; i <= 10; i++) {\n      for (let j = 1; j < i; j++) {\n        const num3 = i - j;\n        \n        \n        list.push({\n          num1: i,\n          num2: j,\n          num3,\n          ops: \"-\",\n          question,\n          answer,\n          choices: getChoices(answer),\n        });\n      }\n    }\n  \n    return list;\n}\n  \nexport function createAddList() {\n    const list = [];\n  \n    for (let i = 1; i <= 10; i++) {\n      for (let j = 1; j <= 10 - i; j++) {\n        const num3 = i + j;\n        const question = randomizer(1, 3);\n        const answer = question === 1 ? i : question === 2 ? j : num3;\n\n        list.push({\n          num1: i,\n          num2: j,\n          num3,\n          ops: \"+\",\n          answer,\n          question,\n          choices: getChoices(answer),\n        });\n      }\n    }\n  \n    return list;\n}\n  \nexport function getChoices(answer: number): number[] {\n    const min = answer > 7 ? answer - 7 : 0;\n    const max = answer > 3 ? 3 : answer;\n    const index = randomizer(min, max);\n  \n    const choices = [];\n    for (let i = 0; i < 4; i++) {\n      choices.push(answer + i - index);\n    }\n    return shuffle(choices);\n}\n  \nexport function randomizer(min: number, max: number) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n  \nexport function shuffle(array: any[]) {\n    for (let i = 0; i < array.length; i++) {\n      const j = randomizer(0, array.length - 1);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\nexport function getCommonProblem(arr: number[]) {\n    const question = randomizer(0, arr.length - 1);\n    const answer = question === 1 ? i : question === 2 ? j : num3;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}