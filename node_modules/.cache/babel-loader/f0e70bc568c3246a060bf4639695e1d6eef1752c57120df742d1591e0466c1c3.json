{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createProblemList } from './math1API';\nconst initialState = {\n  list: createProblemList(),\n  current: 0,\n  correct: 0\n};\nexport const math1Slice = createSlice({\n  name: 'math1',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    next: state => {\n      if (state.current < state.list.length) {\n        state.current++;\n      }\n    },\n    selectAnswer: (state, action) => {\n      action.payload === state.list[state.current].answer && state.correct++;\n    }\n  }\n});\nexport const {\n  next,\n  selectAnswer\n} = math1Slice.actions;\nexport const selectProblem = state => state.math1.list[state.math1.current];\nexport const selectTotal = state => state.math1.list.length;\nexport const selectCorrect = state => state.math1.correct;\nexport const selectCurrent = state => state.math1.current;\nexport default math1Slice.reducer;","map":{"version":3,"names":["createSlice","createProblemList","initialState","list","current","correct","math1Slice","name","reducers","next","state","length","selectAnswer","action","payload","answer","actions","selectProblem","math1","selectTotal","selectCorrect","selectCurrent","reducer"],"sources":["/Users/kim.anh/Desktop/mimi/study/src/features/math1/math1Slice.ts"],"sourcesContent":["import { createSlice, Draft, PayloadAction } from '@reduxjs/toolkit';\nimport { createProblemList } from './math1API';\nimport { RootState } from '../../app/store';\n\nexport interface Problem {\n  num1: number;\n  num2: number;\n  ops: string;\n  choices: number[];\n  answer: number;\n}\n\nexport interface Math1State {\n  list: Problem[];\n  current: number;\n  correct: number;\n}\n\nconst initialState: Math1State = {\n  list: createProblemList(),\n  current: 0,\n  correct: 0,\n};\n\nexport const math1Slice = createSlice({\n  name: 'math1',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    next: (\n      state: Draft<Math1State>,\n    ) => {\n      if (state.current < state.list.length) {\n        state.current++;\n      }\n    },\n    selectAnswer: (\n      state: Draft<Math1State>,\n      action: PayloadAction<number>,  \n    ) => {\n      action.payload === state.list[state.current].answer && state.correct++;\n    },\n  },\n});\n\nexport const { next, selectAnswer } = math1Slice.actions;\n\nexport const selectProblem = (state: RootState) => state.math1.list[state.math1.current];\nexport const selectTotal = (state: RootState) => state.math1.list.length;\nexport const selectCorrect = (state: RootState) => state.math1.correct;\nexport const selectCurrent = (state: RootState) => state.math1.current;\n\nexport default math1Slice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAA8B,kBAAkB;AACpE,SAASC,iBAAiB,QAAQ,YAAY;AAiB9C,MAAMC,YAAwB,GAAG;EAC/BC,IAAI,EAAEF,iBAAiB,CAAC,CAAC;EACzBG,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,OAAO;EACbL,YAAY;EACZ;EACAM,QAAQ,EAAE;IACRC,IAAI,EACFC,KAAwB,IACrB;MACH,IAAIA,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACP,IAAI,CAACQ,MAAM,EAAE;QACrCD,KAAK,CAACN,OAAO,EAAE;MACjB;IACF,CAAC;IACDQ,YAAY,EAAEA,CACZF,KAAwB,EACxBG,MAA6B,KAC1B;MACHA,MAAM,CAACC,OAAO,KAAKJ,KAAK,CAACP,IAAI,CAACO,KAAK,CAACN,OAAO,CAAC,CAACW,MAAM,IAAIL,KAAK,CAACL,OAAO,EAAE;IACxE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,IAAI;EAAEG;AAAa,CAAC,GAAGN,UAAU,CAACU,OAAO;AAExD,OAAO,MAAMC,aAAa,GAAIP,KAAgB,IAAKA,KAAK,CAACQ,KAAK,CAACf,IAAI,CAACO,KAAK,CAACQ,KAAK,CAACd,OAAO,CAAC;AACxF,OAAO,MAAMe,WAAW,GAAIT,KAAgB,IAAKA,KAAK,CAACQ,KAAK,CAACf,IAAI,CAACQ,MAAM;AACxE,OAAO,MAAMS,aAAa,GAAIV,KAAgB,IAAKA,KAAK,CAACQ,KAAK,CAACb,OAAO;AACtE,OAAO,MAAMgB,aAAa,GAAIX,KAAgB,IAAKA,KAAK,CAACQ,KAAK,CAACd,OAAO;AAEtE,eAAeE,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}