{"ast":null,"code":"export function getProblem() {\n  const ops = randomizer(0, 1);\n  const num1 = randomizer(0, 10);\n  const num2 = ops === 0 ? randomizer(0, 10 - num1) : randomizer(0, num1);\n  const answer = ops === 0 ? num1 + num2 : num1 - num2;\n  let choices = [];\n  while (true) {\n    const index = randomizer(0, 3);\n    switch (index) {\n      case 0:\n        choices = [answer, answer + 1, answer + 2, answer + 3];\n        break;\n      case 1:\n        choices = [answer - 1, answer, answer + 1, answer + 2];\n        break;\n      case 2:\n        choices = [answer - 2, answer - 1, answer, answer + 1];\n        break;\n      default:\n        choices = [answer - 2, answer - 1, answer, answer + 1];\n        break;\n    }\n    if (choices.every(c => c >= 0 && c <= 10)) {\n      break;\n    }\n  }\n  return {\n    num1,\n    num2,\n    ops: [\"+\", \"-\"][ops],\n    choices,\n    answer\n  };\n}\nfunction randomizer(min, max) {\n  // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"names":["getProblem","ops","randomizer","num1","num2","answer","choices","index","every","c","min","max","Math","floor","random"],"sources":["/Users/kim.anh/Desktop/mimi/study/src/features/math1/math1API.ts"],"sourcesContent":["export function getProblem() {\n  const ops = randomizer(0, 1);\n  const num1 = randomizer(0, 10);\n  const num2 = ops === 0 ? randomizer(0, 10-num1) : randomizer(0, num1);\n  const answer = ops === 0 ? num1+num2 : num1-num2;\n  let choices = [];\n  while(true) {\n    const index = randomizer(0, 3);\n    switch (index) {\n      case 0:\n        choices = [answer, answer+1, answer+2, answer+3];\n        break;\n      case 1:\n        choices = [answer-1, answer, answer+1, answer+2];\n        break;\n      case 2:\n        choices = [answer-2, answer-1, answer, answer+1];\n        break;\n      default:\n        choices = [answer-2, answer-1, answer, answer+1];\n        break;\n    }\n\n    if (choices.every((c) => c >= 0 && c <= 10)) {\n      break;\n    }\n  }\n  \n  return {\n    num1,\n    num2,\n    ops: [\"+\",\"-\"][ops],\n    choices,\n    answer,\n  }\n}\n\nfunction randomizer(min: number, max: number) { // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}"],"mappings":"AAAA,OAAO,SAASA,UAAUA,CAAA,EAAG;EAC3B,MAAMC,GAAG,GAAGC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B,MAAMC,IAAI,GAAGD,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC;EAC9B,MAAME,IAAI,GAAGH,GAAG,KAAK,CAAC,GAAGC,UAAU,CAAC,CAAC,EAAE,EAAE,GAACC,IAAI,CAAC,GAAGD,UAAU,CAAC,CAAC,EAAEC,IAAI,CAAC;EACrE,MAAME,MAAM,GAAGJ,GAAG,KAAK,CAAC,GAAGE,IAAI,GAACC,IAAI,GAAGD,IAAI,GAACC,IAAI;EAChD,IAAIE,OAAO,GAAG,EAAE;EAChB,OAAM,IAAI,EAAE;IACV,MAAMC,KAAK,GAAGL,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9B,QAAQK,KAAK;MACX,KAAK,CAAC;QACJD,OAAO,GAAG,CAACD,MAAM,EAAEA,MAAM,GAAC,CAAC,EAAEA,MAAM,GAAC,CAAC,EAAEA,MAAM,GAAC,CAAC,CAAC;QAChD;MACF,KAAK,CAAC;QACJC,OAAO,GAAG,CAACD,MAAM,GAAC,CAAC,EAAEA,MAAM,EAAEA,MAAM,GAAC,CAAC,EAAEA,MAAM,GAAC,CAAC,CAAC;QAChD;MACF,KAAK,CAAC;QACJC,OAAO,GAAG,CAACD,MAAM,GAAC,CAAC,EAAEA,MAAM,GAAC,CAAC,EAAEA,MAAM,EAAEA,MAAM,GAAC,CAAC,CAAC;QAChD;MACF;QACEC,OAAO,GAAG,CAACD,MAAM,GAAC,CAAC,EAAEA,MAAM,GAAC,CAAC,EAAEA,MAAM,EAAEA,MAAM,GAAC,CAAC,CAAC;QAChD;IACJ;IAEA,IAAIC,OAAO,CAACE,KAAK,CAAEC,CAAC,IAAKA,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,EAAE,CAAC,EAAE;MAC3C;IACF;EACF;EAEA,OAAO;IACLN,IAAI;IACJC,IAAI;IACJH,GAAG,EAAE,CAAC,GAAG,EAAC,GAAG,CAAC,CAACA,GAAG,CAAC;IACnBK,OAAO;IACPD;EACF,CAAC;AACH;AAEA,SAASH,UAAUA,CAACQ,GAAW,EAAEC,GAAW,EAAE;EAAE;EAC9C,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D"},"metadata":{},"sourceType":"module","externalDependencies":[]}