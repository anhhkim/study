{"ast":null,"code":"import { randomizer, shuffle } from \"./common\";\nexport function create2DigitsSubList() {\n  const list = [];\n  for (let i = 11; i <= 100; i++) {\n    for (let j = 0; j <= i / 10; j++) {\n      for (let k = 0; k <= i % 10; k++) {\n        const num2 = j * 10 + k;\n        if (num2 === 0) {\n          continue;\n        }\n        const num3 = i - num2;\n        list.push({\n          num1: i,\n          num2,\n          num3,\n          ops: \"-\",\n          ...get2DigitsCommonProblem([i, num2, num3])\n        });\n      }\n    }\n  }\n  return list;\n}\nexport function create2DigitsAddList() {\n  const list = [];\n  for (let i = 11; i <= 100; i++) {\n    for (let j = 0; j <= (100 - i) / 10; j++) {\n      for (let k = 0; k < 10 - i % 10; k++) {\n        const num2 = j * 10 + k;\n        if (num2 === 0) {\n          continue;\n        }\n        const num3 = i + num2;\n        list.push({\n          ...get2DigitsCommonProblem([i, num2, num3]),\n          num1: i,\n          num2,\n          num3,\n          ops: \"+\"\n        });\n      }\n    }\n  }\n  return list;\n}\nexport function get2DigitsChoices(answer) {\n  const min = answer > 97 ? answer - 97 : 0;\n  const max = answer > 3 ? 3 : answer;\n  const index = randomizer(min, max);\n  const choices = [];\n  for (let i = 0; i < 4; i++) {\n    choices.push(answer + i - index);\n  }\n  return shuffle(choices);\n}\nexport function get2DigitsCommonProblem(arr) {\n  const question = randomizer(0, arr.length - 1);\n  const answer = arr[question];\n  return {\n    question,\n    answer,\n    choices: get2DigitsChoices(answer),\n    equalRight: randomizer(0, 1) === 1\n  };\n}","map":{"version":3,"names":["randomizer","shuffle","create2DigitsSubList","list","i","j","k","num2","num3","push","num1","ops","get2DigitsCommonProblem","create2DigitsAddList","get2DigitsChoices","answer","min","max","index","choices","arr","question","length","equalRight"],"sources":["/Users/kim.anh/Desktop/mimi/study/src/app/common/math2Digits.ts"],"sourcesContent":["import { randomizer, shuffle } from \"./common\";\n\nexport function create2DigitsSubList() {\n    const list = [];\n  \n    for (let i = 11; i <= 100; i++) {\n      for (let j = 0; j <= i/10; j++) {\n        for (let k = 0; k <= i % 10; k++) {\n          const num2 = j*10 + k;\n          if (num2 === 0) {\n            continue\n          }\n          const num3 = i - num2;\n        \n          list.push({\n            num1: i,\n            num2,\n            num3,\n            ops: \"-\",\n            ...get2DigitsCommonProblem([i, num2, num3]),\n          });\n        }\n      }\n    }\n  \n    return list;\n}\n  \nexport function create2DigitsAddList() {\n    const list = [];\n  \n    for (let i = 11; i <= 100; i++) {\n      for (let j = 0; j <= (100-i)/10; j++) {\n        for (let k = 0; k < 10-(i%10); k++) {\n          const num2 = j*10 + k;\n          if (num2 === 0) {\n            continue\n          }\n          const num3 = i + num2;\n\n          list.push({\n            ...get2DigitsCommonProblem([i, num2, num3]),\n            num1: i,\n            num2,\n            num3,\n            ops: \"+\",\n\n          });\n        }\n      }\n    }\n  \n    return list;\n}\n  \nexport function get2DigitsChoices(answer: number): number[] {\n    const min = answer > 97 ? answer - 97 : 0;\n    const max = answer > 3 ? 3 : answer;\n    const index = randomizer(min, max);\n  \n    const choices = [];\n    for (let i = 0; i < 4; i++) {\n      choices.push(answer + i - index);\n    }\n    return shuffle(choices);\n}\n\nexport function get2DigitsCommonProblem(arr: number[]) {\n  const question = randomizer(0, arr.length - 1);\n  const answer = arr[question];\n  return {\n      question,\n      answer,\n      choices: get2DigitsChoices(answer),\n      equalRight: randomizer(0, 1) === 1,\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}