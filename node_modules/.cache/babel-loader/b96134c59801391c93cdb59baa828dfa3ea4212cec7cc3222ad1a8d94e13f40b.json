{"ast":null,"code":"import { randomizer, shuffle } from \"./common\";\nexport function create1DigitSubList() {\n  const list = [];\n  for (let i = 1; i <= 10; i++) {\n    for (let j = 1; j < i; j++) {\n      const num3 = i - j;\n      list.push({\n        num1: i,\n        num2: j,\n        num3,\n        ops: \"-\",\n        ...get1DigitCommonProblem([i, j, num3])\n      });\n    }\n  }\n  return list;\n}\nexport function create1DigitAddList() {\n  const list = [];\n  for (let i = 1; i <= 10; i++) {\n    for (let j = 1; j <= 10 - i; j++) {\n      const num3 = i + j;\n      list.push({\n        ...get1DigitCommonProblem([i, j, num3]),\n        num1: i,\n        num2: j,\n        num3,\n        ops: \"+\"\n      });\n    }\n  }\n  return list;\n}\nexport function get1DigitChoices(answer) {\n  const choices = [];\n  for (let i = 0; i <= 5; i++) {\n    if (answer - i > 0) {\n      choices.push(answer - i);\n    }\n    if (answer - i * 10 > 0) {\n      choices.push(answer - i * 10);\n    }\n    if (answer + i <= 100) {\n      choices.push(answer + i);\n    }\n    if (answer + i * 10 <= 0) {\n      choices.push(answer + i * 10);\n    }\n  }\n  return shuffle(choices);\n}\nexport function get1DigitCommonProblem(arr) {\n  const question = randomizer(0, arr.length - 1);\n  const answer = arr[question];\n  return {\n    question,\n    answer,\n    choices: get1DigitChoices(answer),\n    equalRight: randomizer(0, 1) === 1\n  };\n}","map":{"version":3,"names":["randomizer","shuffle","create1DigitSubList","list","i","j","num3","push","num1","num2","ops","get1DigitCommonProblem","create1DigitAddList","get1DigitChoices","answer","choices","arr","question","length","equalRight"],"sources":["/Users/kim.anh/Desktop/mimi/study/src/app/common/math1Digit.ts"],"sourcesContent":["import { randomizer, shuffle } from \"./common\";\n\nexport type CommonProblem = {\n    answer: number;\n    choices: number[];\n    question: number;\n    equalRight: boolean;\n}\n\nexport function create1DigitSubList() {\n    const list = [];\n  \n    for (let i = 1; i <= 10; i++) {\n      for (let j = 1; j < i; j++) {\n        const num3 = i - j;\n        \n        list.push({\n          num1: i,\n          num2: j,\n          num3,\n          ops: \"-\",\n          ...get1DigitCommonProblem([i, j, num3]),\n        });\n      }\n    }\n  \n    return list;\n}\n  \nexport function create1DigitAddList() {\n    const list = [];\n  \n    for (let i = 1; i <= 10; i++) {\n      for (let j = 1; j <= 10 - i; j++) {\n        const num3 = i + j;\n\n        list.push({\n          ...get1DigitCommonProblem([i, j, num3]),\n          num1: i,\n          num2: j,\n          num3,\n          ops: \"+\",\n\n        });\n      }\n    }\n  \n    return list;\n}\n  \nexport function get1DigitChoices(answer: number): number[] {\n  const choices: number[] = [];\n  for (let i = 0; i <= 5; i++) {\n    if (answer - i > 0) {\n      choices.push(answer-i);\n    }\n    if (answer - (i*10) > 0) {\n      choices.push(answer-(i*10));\n    }\n\n    if (answer + i <= 100) {\n      choices.push(answer+i);\n    }\n    if (answer + (i*10) <= 0) {\n      choices.push(answer+(i*10));\n    }\n  }\n  return shuffle(choices);\n}\n\nexport function get1DigitCommonProblem(arr: number[]) {\n    const question = randomizer(0, arr.length - 1);\n    const answer = arr[question];\n    return {\n        question,\n        answer,\n        choices: get1DigitChoices(answer),\n        equalRight: randomizer(0, 1) === 1,\n    }\n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,UAAU;AAS9C,OAAO,SAASC,mBAAmBA,CAAA,EAAG;EAClC,MAAMC,IAAI,GAAG,EAAE;EAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAEC,CAAC,EAAE,EAAE;MAC1B,MAAMC,IAAI,GAAGF,CAAC,GAAGC,CAAC;MAElBF,IAAI,CAACI,IAAI,CAAC;QACRC,IAAI,EAAEJ,CAAC;QACPK,IAAI,EAAEJ,CAAC;QACPC,IAAI;QACJI,GAAG,EAAE,GAAG;QACR,GAAGC,sBAAsB,CAAC,CAACP,CAAC,EAAEC,CAAC,EAAEC,IAAI,CAAC;MACxC,CAAC,CAAC;IACJ;EACF;EAEA,OAAOH,IAAI;AACf;AAEA,OAAO,SAASS,mBAAmBA,CAAA,EAAG;EAClC,MAAMT,IAAI,GAAG,EAAE;EAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,GAAGD,CAAC,EAAEC,CAAC,EAAE,EAAE;MAChC,MAAMC,IAAI,GAAGF,CAAC,GAAGC,CAAC;MAElBF,IAAI,CAACI,IAAI,CAAC;QACR,GAAGI,sBAAsB,CAAC,CAACP,CAAC,EAAEC,CAAC,EAAEC,IAAI,CAAC,CAAC;QACvCE,IAAI,EAAEJ,CAAC;QACPK,IAAI,EAAEJ,CAAC;QACPC,IAAI;QACJI,GAAG,EAAE;MAEP,CAAC,CAAC;IACJ;EACF;EAEA,OAAOP,IAAI;AACf;AAEA,OAAO,SAASU,gBAAgBA,CAACC,MAAc,EAAY;EACzD,MAAMC,OAAiB,GAAG,EAAE;EAC5B,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC3B,IAAIU,MAAM,GAAGV,CAAC,GAAG,CAAC,EAAE;MAClBW,OAAO,CAACR,IAAI,CAACO,MAAM,GAACV,CAAC,CAAC;IACxB;IACA,IAAIU,MAAM,GAAIV,CAAC,GAAC,EAAG,GAAG,CAAC,EAAE;MACvBW,OAAO,CAACR,IAAI,CAACO,MAAM,GAAEV,CAAC,GAAC,EAAG,CAAC;IAC7B;IAEA,IAAIU,MAAM,GAAGV,CAAC,IAAI,GAAG,EAAE;MACrBW,OAAO,CAACR,IAAI,CAACO,MAAM,GAACV,CAAC,CAAC;IACxB;IACA,IAAIU,MAAM,GAAIV,CAAC,GAAC,EAAG,IAAI,CAAC,EAAE;MACxBW,OAAO,CAACR,IAAI,CAACO,MAAM,GAAEV,CAAC,GAAC,EAAG,CAAC;IAC7B;EACF;EACA,OAAOH,OAAO,CAACc,OAAO,CAAC;AACzB;AAEA,OAAO,SAASJ,sBAAsBA,CAACK,GAAa,EAAE;EAClD,MAAMC,QAAQ,GAAGjB,UAAU,CAAC,CAAC,EAAEgB,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC;EAC9C,MAAMJ,MAAM,GAAGE,GAAG,CAACC,QAAQ,CAAC;EAC5B,OAAO;IACHA,QAAQ;IACRH,MAAM;IACNC,OAAO,EAAEF,gBAAgB,CAACC,MAAM,CAAC;IACjCK,UAAU,EAAEnB,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK;EACrC,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}